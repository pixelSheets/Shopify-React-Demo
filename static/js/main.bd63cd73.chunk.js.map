{"version":3,"sources":["context/shopContext.js","components/Loading.js","pages/HomePage.js","pages/ProductPage.js","components/Navbar.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["ShopContext","React","createContext","client","Client","buildClient","storefrontAccessToken","domain","ShopProvider","state","products","product","checkout","isCartOpen","createCheckout","a","create","localStorage","setItem","id","setState","fetchCheckout","checkoutId","fetch","then","catch","err","console","log","addItemToCheckout","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","openCart","fetchAllProducts","fetchAll","fetchProductWithId","JSON","stringify","closeCart","this","Provider","value","props","children","Component","Consumer","Loading","bg","d","align","justify","pos","top","bottom","right","left","style","zIndex","name","size","color","HomePage","useContext","useEffect","map","key","to","textDecoration","p","h","bgImg","images","src","bgSize","bgPos","shadow","hoverShadow","transition","m","b","tag","textWeight","textSize","textDecor","textColor","title","variants","price","ProductPage","useParams","w","y","description","rounded","onClick","Navbar","flexDir","Cart","lineItems","isOpen","onClose","border","borderColor","hoverTextColor","flexGrow","overflow","flexWrap","length","item","t","variant","image","href","webUrl","target","rel","engine","Styletron","App","debug","debugAfterHydration","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd63cd73.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n  storefrontAccessToken: \"dd4d4dc146542ba7763305d71d1b3d38\",\n  domain: \"graphql.myshopify.com\",\n});\n\nclass ShopProvider extends Component {\n  state = {\n    products: [],\n    product: {},\n    checkout: {},\n    isCartOpen: false,\n  };\n\n  componentDidMount() {\n    // this.createCheckout();\n\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    }\n    //if there is no checkout_id in localStorage then we will create a new checkout\n\n    //else fetch the checkout from shopify\n  }\n\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"checkout\", checkout.id);\n    await this.setState({ checkout: checkout });\n  };\n\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  addItemToCheckout = async (variantId, quantity) => {\n    const lineItemsToAdd = [\n      {\n        variantId,\n        quantity: parseInt(quantity, 10),\n      },\n    ];\n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n    this.setState({ checkout: checkout });\n    console.log(checkout);\n\n    this.openCart();\n  };\n\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  fetchProductWithId = async (id) => {\n    const product = await client.product.fetch(id);\n    this.setState({ product: product });\n    console.log(JSON.stringify(product));\n\n    return product;\n  };\n\n  closeCart = () => {\n    this.setState({ isCartOpen: false });\n  };\n  openCart = () => {\n    this.setState({ isCartOpen: true });\n  };\n\n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithId: this.fetchProductWithId,\n          closeCart: this.closeCart,\n          openCart: this.openCart,\n          addItemToCheckout: this.addItemToCheckout,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;\n","import React from \"react\";\nimport { Div, Icon } from \"atomize\";\n\nconst Loading = () => {\n  return (\n    <Div\n      bg=\"transparent\"\n      d=\"flex\"\n      align=\"center\"\n      justify=\"center\"\n      pos=\"absolute\"\n      top=\"0\"\n      bottom=\"0\"\n      right=\"0\"\n      left=\"0\"\n      style={{ zIndex: -1 }}\n    >\n      <Icon name=\"Loading3\" size=\"4rem\" color=\"brand500\" />\n    </Div>\n  );\n};\n\n// const LoadingComponent = () => (\n//     <Div d=\"flex\" align=\"center\" justify=\"center\" h=\"100%\">\n//         <Icon name=\"Loading3\" size=\"20px\" color=\"brand500\" />\n//     </Div>\n// )\n\nexport default Loading;\n","import React, { useContext, useEffect }  from 'react'\nimport { ShopContext } from '../context/shopContext'\nimport { Text, Div, Row, Col, Container } from \"atomize\";\nimport { Link } from 'react-router-dom'\nimport Loading from '../components/Loading'\n\n\nconst HomePage = () => {\n    const {fetchAllProducts, products} = useContext(ShopContext)\n\n    useEffect(() => {\n        fetchAllProducts()\n        return () => {\n            // cleanup\n        };\n    }, [fetchAllProducts])\n\n    if (!products) return <Loading />\n    return (\n        <Container>\n            <Row>\n                {products.map(product => (\n                    <Col key={product.id} size=\"3\" >\n                        <Link to={`/product/${product.id}`} style={{ textDecoration: 'none' }}>\n                            <Div p=\"2rem\">\n                                <Div \n                                    h=\"20rem\"\n                                    bgImg={product.images[0].src}\n                                    bgSize=\"cover\"\n                                    bgPos=\"center center\"\n                                    shadow=\"3\"\n                                    hoverShadow=\"4\"\n                                    transition=\"0.3s\"\n                                    m={{ b: \"1.5rem\" }}\n                                    >\n                                </Div>\n                                <Text tag=\"h1\" textWeight=\"300\" textSize=\"subheader\" textDecor=\"none\" textColor=\"black500\">{product.title}</Text>\n                                <Text tag=\"h2\" textWeight=\"300\" textSize=\"body\" textDecor=\"none\" textColor=\"gray500\">${product.variants[0].price}</Text>\n                            </Div>\n                        </Link>\n                    </Col>\n                ))}\n            </Row>\n        </Container>\n    )\n}\n\nexport default HomePage\n","import React, { useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { ShopContext } from '../context/shopContext'\nimport { Text, Div, Button, Row, Col, Container } from 'atomize'\nimport Loading from '../components/Loading'\n\nconst ProductPage = () => {\n    let { id } = useParams()\n    const { fetchProductWithId, addItemToCheckout, product } = useContext(ShopContext)\n    // const [product, setProduct] = useState(null)\n    // async function fetchData() {\n    //     const fetchedProduct = await fetchProductWithId(id)\n    //     setProduct(fetchedProduct)\n    // }\n\n    useEffect(() => {\n        fetchProductWithId(id)\n        \n        // fetchData()\n        return () => {\n            // setProduct(null)\n        };\n    }, [ fetchProductWithId, id])\n\n    if (!product.title) return <Loading />\n    return (\n        <Container>\n            <Row m={{ b: \"2rem\" }} p=\"2rem\">\n                <Col>\n                    <Div bgImg={product.images[0].src} shadow=\"3\" bgSize=\"cover\" w=\"100%\" bgPos=\"center center\" h=\"40rem\"/>\n                </Col>\n                <Col>\n                    <Text tag=\"h1\" textColor=\"black500\" textWeight=\"200\" m={{ y: '2rem' }}>{product.title}</Text>\n                    <Text tag=\"h3\" m={{ y: '2rem' }} textWeight=\"200\">${product.variants[0].price}</Text>\n                    <Text tag=\"p\" textSize=\"paragraph\" textColor=\"gray900\" textWeight=\"200\">{product.description}</Text>\n                    <Button rounded=\"0\" shadow=\"3\" bg=\"black500\" m={{ y: '2rem' }} onClick={() => addItemToCheckout(product.variants[0].id, 1)}>Add To Cart</Button>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default ProductPage\n","import React, {useContext} from 'react'\nimport { Container, Anchor, Icon } from 'atomize'\nimport { Link } from 'react-router-dom'\nimport { ShopContext } from '../context/shopContext'\n\nconst Navbar = () => {\n\n    const { openCart } = useContext(ShopContext)\n\n    return (\n        <>  \n            <Container d=\"flex\" flexDir=\"row\" p=\"2rem\" justify=\"space-between\" >\n                <Link to=\"/\"><Icon name=\"Store\" size=\"30px\" color=\"black500\" /></Link>\n                <Anchor onClick={() => openCart()}><Icon name=\"Bag\" size=\"20px\" color=\"black500\" /></Anchor>\n            </Container>\n        </>\n    )\n}\n\nexport default Navbar\n","import React, { useContext } from 'react'\nimport { Div, SideDrawer, Text, Row, Col, Anchor, Button, Container, Icon } from \"atomize\";\nimport {ShopContext} from '../context/shopContext'\n\nconst Cart = () => {\n\n    const { isCartOpen, closeCart, checkout } = useContext(ShopContext)\n\n    if (checkout.lineItems) {\n        return (\n            <SideDrawer isOpen={isCartOpen} onClose={closeCart}>\n                <Container d=\"flex\" flexDir=\"column\" h=\"100%\">\n                    <Row justify=\"space-between\" border={{ b: '1px solid' }} p=\"0.7rem\" borderColor=\"gray300\">\n                        <Text tag=\"h1\" textColor=\"black500\" textSize=\"paragraph\" hoverTextColor=\"black700\" transition=\"0.3s\">Bag</Text>\n                        <Anchor onClick={() => closeCart()} ><Icon name=\"Cross\" color=\"black500\"/></Anchor>\n                    </Row>\n                    <Row flexGrow=\"2\" p=\"0.7rem\" overflow=\"auto\" flexWrap=\"nowrap\" flexDir=\"column\">\n                        {checkout.lineItems.length < 1 ?\n                            <Row>\n                                <Col><Text tag=\"h1\" textColor=\"black500\" textSize=\"paragraph\" hoverTextColor=\"black700\" transition=\"0.3s\">Cart Is Empty</Text></Col>\n                            </Row>\n                            :\n                            <>\n                                {checkout.lineItems && checkout.lineItems.map(item => (\n                                    <Row key={item.id} p={{ t:\"5px\" }}>\n                                        <Col>\n                                            <Div bgImg={item.variant.image.src} bgSize=\"cover\" bgPos=\"center\" h=\"5rem\" w=\"4rem\"/>\n                                        </Col>\n                                        <Col>\n                                            <Text>{item.title}</Text>\n                                            <Text>{item.variant.title}</Text>\n                                            <Text>{item.quantity}</Text>\n                                        </Col>\n                                        <Col>\n                                            <Text>{item.variant.price}</Text>\n                                        </Col>\n                                    </Row>\n                                ))}\n                            </>\n                        }\n                    </Row>\n                    <Row border={{ t: '1px solid' }} p=\"0.7rem\" borderColor=\"gray300\">\n                        <Anchor w=\"100%\" href={checkout.webUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button w=\"100%\" rounded=\"0\" bg=\"black500\" shadow=\"2\" hoverShadow=\"3\" m={{t: '1rem'}}>\n                                Checkout\n                            </Button>\n                        </Anchor>\n                    </Row>\n                </Container>\n            </SideDrawer>\n        )\n    }\n\n    return null\n\n}\n\nexport default Cart\n\n","import React from 'react';\nimport './App.css';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport ShopProvider from './context/shopContext'\n\nimport HomePage from './pages/HomePage'\nimport ProductPage from './pages/ProductPage'\nimport Navbar from './components/Navbar'\nimport Cart from './components/Cart'\n\nconst debug = process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\nconst engine = new Styletron();\n\n\nconst App = () => {\n  return (\n    <ShopProvider>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <Router>\n          <Navbar />\n          <Cart />\n          <Switch>\n            <Route path=\"/product/:id\">\n              <ProductPage />\n            </Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route> \n          </Switch>\n        </Router>\n      </StyletronProvider>\n    </ShopProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}